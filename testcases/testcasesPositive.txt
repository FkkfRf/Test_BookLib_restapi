ТЕСТОВЫЕ ДАННЫЕ:
{ "author": "Роберт Мартин", "id": 1, "isElectronicBook": false, "name": "Чистый код", "year": 1998 }
	
	1. ЗАГОЛОВОК
        Получить полный список книг 

    2. КРИТИЧНОСТЬ
        значительный

    3. ПРЕДУСЛОВИЯ
        Content-Type=application/json

    4. ШАГИ
		Отправить GET запрос http://localhost:5000/api/books
		Проверить код состояния
		Проверить формат ответа от сервера

    5. ОЖИДАЕМЫЙ РЕЗУЛЬТАТ
        Запрос успешно отправлен
		Код состояния
			HTTP/1.1 200 OK
		Тело ответа в формате 
			JSON
		Значения  значения первого элемента списка соответствуют значениям из тестовых данных
			"id": 1
			"author": "Роберт Мартин"
	
ТЕСТОВЫЕ ДАННЫЕ:
номер id 2
	
	1. ЗАГОЛОВОК
        Получить описаний книги по id

    2. КРИТИЧНОСТЬ
        значительный

    3. ПРЕДУСЛОВИЯ
        Content-Type=application/json

    4. ШАГИ
		Отправить GET запрос http://localhost:5000/api/books/2
		Проверить формат ответа от сервера
		Проверить соответствие basePath и Id

    5. ОЖИДАЕМЫЙ РЕЗУЛЬТАТ
        Запрос успешно отправлен
		Код состояния
			HTTP/1.1 200 OK
		Тело ответа в формате 
			JSON
		По пути http://localhost:5000/api/books/2 найдена книга с id=2

ТЕСТОВЫЕ ДАННЫЕ:
name= "Somename"

	1. ЗАГОЛОВОК
        Добавить новую книгу

   2. КРИТИЧНОСТЬ
        значительный

   3. ПРЕДУСЛОВИЯ
        Content-Type=application/json

	4. ШАГИ
		Отправить POST запрос http://localhost:5000/api/books
		Проверить код состояния
		Проверить формат ответа от сервера
		Проверить название(name) созданной книги

   5. ОЖИДАЕМЫЙ РЕЗУЛЬТАТ
        Запрос успешно отправлен
		Код состояния
			HTTP/1.1 201 CREATED
		Тело ответа в формате 
			JSON
		Значения ответа соответствуют значениям из тестовых данных
			name="Любое название"

ТЕСТОВЫЕ ДАННЫЕ:
name="Somename"  author="Someauthor" year="Someyear" isElectronicBook=true

	1. ЗАГОЛОВОК
        Oбновить информацию о книге по ее id

   2. КРИТИЧНОСТЬ
        значительный

   3. ПРЕДУСЛОВИЯ
        Content-Type=application/json
		Добавить новую книгу
		Отправить POST запрос http://localhost:5000/api/books
		Определить id созданной книги
		
	4. ШАГИ
		Задать автора, имя, год, электр  для обновления книги
		Отправить PUT запрос http://localhost:5000/api/books/id
		Проверить код состояния
		Проверить формат ответа от сервера
		Проверить соответствие значений name, author, year. isElectronicBook заданным

   5. ОЖИДАЕМЫЙ РЕЗУЛЬТАТ
        Запрос успешно отправлен
		Код состояния
			HTTP/1.1 200 OK
		Тело ответа в формате 
			JSON
		Значения name, author, year. isElectronicBook соответствуют значениям из тестовых данных
			
ТЕСТОВЫЕ ДАННЫЕ:
нет

	1. ЗАГОЛОВОК
        Удалить последнюю добавленную книгу по Id

   2. КРИТИЧНОСТЬ
        значительный

   3. ПРЕДУСЛОВИЯ
        Content-Type=application/json
		Добавить новую книгу
		Отправить POST запрос http://localhost:5000/api/books
		Определить id созданной книги
	
	4. ШАГИ
		Отправить DELETE запрос http://localhost:5000/api/books/id
		Проверить код состояния
		Проверить формат ответа от сервера

   5. ОЖИДАЕМЫЙ РЕЗУЛЬТАТ
        Запрос успешно отправлен
		Код состояния
			HTTP/1.1 200 OK
		Тело ответа в формате 
			JSON
